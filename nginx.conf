user www-data;
worker_processes auto;
pid /run/nginx.pid;
include /etc/nginx/modules-enabled/*.conf;

events {
	# 全局最大连接数，可按业务最大承载并发数修改
	worker_connections 8192;
	# 开启多核优化
	multi_accept on;
}

http {

	# # # # # # # #
	# 基础配置
	# Basic CONF
	# # # # # # # #

	#默认采用 UTF-8 编码
	charset utf-8;
    
	# 改善Nginx IO调度 [on|off]
	sendfile on;
	tcp_nopush on;
	tcp_nodelay on;

	# 静态映射哈希表最大值，保持默认即可 [Any Multiples of 2]
	types_hash_max_size 2048;
    
	# 连接持续时间，可根据业务适当调整 [Any Natural Number]
	keepalive_timeout 180;

	# 禁止输出Nginx版本号 [on|off]
	server_tokens off;
    
	include /etc/nginx/mime.types;
	# 默认MIME
	default_type application/plain;

	# # # # # # # # #
	# 文件目录配置
	# Logs Dir CONF
	# # # # # # # # #

	access_log /var/log/nginx/access.log;
	error_log /var/log/nginx/error.log;

	# # # # # # # # # # # # #
	# 反代配置
	# 缓存键名：cache_one
	# - - - - - - - -
	# Nginx Proxy CONF
	# Cache Key Name:cache_one
	# # # # # # # # # # # # #
    
	# 缓存目录 [Cache Dir]
	# Levels: 缓存目录层级 e.g: 1:2=/cache/a/b2 1:2:2=/cache/c/d2/ef
	# keys_zone: 单个缓存文件大小上限
	# max_size: 缓存键总缓存文件大小上限
	# use_temp_path: 是否启用临时缓存目录，若不启用则为 off
	proxy_cache_path /cache levels=1:2:2 keys_zone=cache_one:25m max_size=20g inactive=31d use_temp_path=on;
    
	# 临时缓存目录，推荐使用内存盘 [Absolute Path]
	proxy_temp_path  /RAMDisk;

	# 多个请求集中回源 [on|off]
	proxy_cache_lock on;
    
	# 需要访问多少次再缓存资源 [Any Natural Number] 
	proxy_cache_min_uses 3;

	# 缓冲池配置，视业务情况调整 [...]
	client_body_buffer_size 512k;
	proxy_buffer_size 32k;
	proxy_buffers 4 64k;
	proxy_busy_buffers_size 128k;
    
	# 切换反代上游条件 [List]
	proxy_next_upstream error timeout invalid_header http_500 http_503 http_404;

	# 缓存键名 [Any Name]
	proxy_cache cache_one;


	# # # # # # # # # # #
	# Gzip 压缩配置
	# Gzip Compress CONF
	# # # # # # # # # # #

	gzip on;
	# Gzip 文件大小大于此设定再进行压缩，避免小文件调用Gzip过度浪费资源 [Size in Bytes]
	gzip_min_length  1k;
	# Gzip 压缩等级，等级越高压缩效果越好，但效率也越低，一般 1 即可 [1~9]
	gzip_comp_level 1;
    
	# Gzip 最小支持HTTP版本，默认是HTTP 1.0 [1.0|1.1|2|3]
	gzip_http_version 1.1;
	# 不对IE6返回Gzip内容 [Fuck IE 6]
	gzip_disable   msie6;

    
	# 仅压缩下列MIME的文件 [MIME List]
	gzip_types text/plain application/x-javascript text/css application/xml text/javascript
	application/x-httpd-php application/javascript application/json;

	# 若反向代理包含下列Header则进行压缩 [Header List]
	gzip_proxied   expired no-cache no-store private auth;

	# 返回 Vary Header [on|off]
	gzip_vary on;

	# # # # # # # # # # # #
	# Brotli 压缩配置
	# Brotli Compress CONF
	# # # # # # # # # # # #

	brotli on;
	# Brotli 压缩层级 由于Brotli压缩耗时较长 所以 动态内容居多推荐配置为 4 ，静态内容配合Brotli_Static可配置为 11 [1~11]
	brotli_comp_level 4;
	# 若静态资源居多，则推荐开启 [on|off]
	brotli_static on;
	# Brotli 文件大小大于此设定再进行压缩，避免小文件调用Brotli过度浪费资源 [Size in Bytes]
	brotli_min_length 64;

	brotli_types application/atom+xml application/javascript application/json application/rss+xml
		application/vnd.ms-fontobject application/x-font-opentype application/x-font-truetype
		application/x-font-ttf application/x-javascript application/xhtml+xml application/xml
		font/eot font/opentype font/otf font/truetype image/svg+xml image/vnd.microsoft.icon
		image/x-icon image/x-win-bitmap text/css text/javascript text/plain text/xml;


	# # # # # # # # # # # #
	# 反向代理 上游配置
	# Proxy Upstream CONF
	# # # # # # # # # # # #

	# 权重配置懒得写了，自己看文档 https://nginx.org/en/docs/http/ngx_http_upstream_module.html
	upstream API_Origin{
	# 支持[IP:Port],[Domain:Port],[unix:/Path]
	server 11.4.5.14:8443;
	server 114514.arpa:65535;
	server unix:/socket/Tadokoro-Kōji;
	# 连接保持时间，可根据业务适当延长
	keepalive 86400;
	}
	# 用于解析上游域名 [DNS Nameserver]
	resolver    8.8.8.8;
	# 解析超时时间 [Time]
	resolver_timeout 1s;


	# # # # # # # # # # # # #
	# 其他特性支持
	# Support Other Feature
	# # # # # # # # # # # # #
    
	# 仅对HTTPS发送HSTS Header
	map $scheme $hsts_header {
		https "max-age=31536000; includeSubDomains; preload";
	}

	# 兼容Websocket
	map $http_upgrade $connection_upgrade {
		default upgrade;
		""      close;
	}


	include /etc/nginx/conf.d/*.conf;
	#include /etc/nginx/sites-enabled/*;

}